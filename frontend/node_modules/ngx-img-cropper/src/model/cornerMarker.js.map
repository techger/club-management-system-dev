{"version":3,"file":"cornerMarker.js","sourceRoot":"","sources":["../../../src/model/cornerMarker.ts"],"names":[],"mappings":"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","sourcesContent":["import { Handle, IHandle } from \"./handle\";\r\nimport { CropperSettings } from \"../cropperSettings\";\r\n\r\nexport interface ICornerMarker extends IHandle {\r\n  horizontalNeighbour: CornerMarker;\r\n  verticalNeighbour: CornerMarker;\r\n}\r\n\r\nexport class CornerMarker extends Handle implements ICornerMarker {\r\n  public horizontalNeighbour: CornerMarker;\r\n  public verticalNeighbour: CornerMarker;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n  }\r\n\r\n  public drawCornerBorder(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength: number = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    if (this.cropperSettings.rounded) {\r\n      let width: number = this.position.x - this.horizontalNeighbour.position.x;\r\n      let height: number = this.position.y - this.verticalNeighbour.position.y;\r\n\r\n      let offX: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n      let offY: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n\r\n      this.offset.x = hDirection > 0 ? offX : -offX;\r\n      this.offset.y = vDirection > 0 ? offY : -offY;\r\n    } else {\r\n      this.offset.x = 0;\r\n      this.offset.y = 0;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.lineJoin = \"miter\";\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n    ctx.strokeStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      \"rgba(255,255,255,.7)\";\r\n    ctx.stroke();\r\n  }\r\n\r\n  public drawCornerFill(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength: number = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.fillStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      \"rgba(255,255,255,.7)\";\r\n    ctx.fill();\r\n  }\r\n\r\n  public moveX(x: number): void {\r\n    this.setPosition(x, this.position.y);\r\n  }\r\n\r\n  public moveY(y: number): void {\r\n    this.setPosition(this.position.x, y);\r\n  }\r\n\r\n  public move(x: number, y: number): void {\r\n    this.setPosition(x, y);\r\n    this.verticalNeighbour.moveX(x);\r\n    this.horizontalNeighbour.moveY(y);\r\n  }\r\n\r\n  public addHorizontalNeighbour(neighbour: CornerMarker): void {\r\n    this.horizontalNeighbour = neighbour;\r\n  }\r\n\r\n  public addVerticalNeighbour(neighbour: CornerMarker): void {\r\n    this.verticalNeighbour = neighbour;\r\n  }\r\n\r\n  public getHorizontalNeighbour(): CornerMarker {\r\n    return this.horizontalNeighbour;\r\n  }\r\n\r\n  public getVerticalNeighbour(): CornerMarker {\r\n    return this.verticalNeighbour;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    this.drawCornerFill(ctx);\r\n    this.drawCornerBorder(ctx);\r\n  }\r\n}\r\n"]}