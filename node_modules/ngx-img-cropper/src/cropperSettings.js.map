{"version":3,"file":"cropperSettings.js","sourceRoot":"","sources":["../../src/cropperSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AA+B5D,IAAA;IAuCE,yBAAY,QAA2B;2BAtCV,GAAG;4BACF,GAAG;6BAED,KAAK;qBAId,GAAG;sBACF,GAAG;wBAED,EAAE;yBACD,EAAE;2CACiB,IAAI;4BAEpB,GAAG;6BACF,GAAG;mCAEgB,IAAI,mBAAmB,EAAE;2BAC9C,EAAE;2BACD,KAAK;oCAMG,CAAC;iCACJ,EAAE;gCACF,IAAI;iCAEJ,yBAAyB;4BAC7B,IAAI;4BACJ,KAAK;6BAEL,GAAG;wBAEN,KAAK;2BACF,IAAI;QAGjC,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC/B;KACF;IAED,sBAAI,oCAAO;aAOX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;SACtB;aATD,UAAY,GAAY;YACtB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;SACF;;;OAAA;IAMD,sBAAI,uCAAU;aAUd;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;SACzB;aAZD,UAAe,GAAY;YACzB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CACX,4EAA4E,CAC7E,CAAC;gBACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;SACF;;;OAAA;0BA/FH;IAoGC,CAAA;AArED,2BAqEC","sourcesContent":["import { CropperDrawSettings } from \"./cropperDrawSettings\";\r\n\r\nexport interface ICropperSettings {\r\n  canvasWidth?: number;\r\n  canvasHeight?: number;\r\n  dynamicSizing?: boolean;\r\n  cropperClass?: string;\r\n  croppingClass?: string;\r\n  width?: number;\r\n  height?: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  minWithRelativeToResolution?: boolean;\r\n  croppedWidth?: number;\r\n  croppedHeight?: number;\r\n  cropperDrawSettings?: any;\r\n  touchRadius?: number;\r\n  noFileInput?: boolean;\r\n  fileType?: string;\r\n  resampleFn?: Function;\r\n  markerSizeMultiplier?: number;\r\n  centerTouchRadius?: number;\r\n  showCenterMarker?: boolean;\r\n  allowedFilesRegex?: RegExp;\r\n  cropOnResize?: boolean;\r\n  preserveSize?: boolean;\r\n  compressRatio?: number;\r\n  rounded?: boolean;\r\n  keepAspect?: boolean;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth: number = 300;\r\n  public canvasHeight: number = 300;\r\n\r\n  public dynamicSizing: boolean = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width: number = 200;\r\n  public height: number = 200;\r\n\r\n  public minWidth: number = 50;\r\n  public minHeight: number = 50;\r\n  public minWithRelativeToResolution: boolean = true;\r\n\r\n  public croppedWidth: number = 100;\r\n  public croppedHeight: number = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius: number = 20;\r\n  public noFileInput: boolean = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: Function;\r\n\r\n  public markerSizeMultiplier: number = 1;\r\n  public centerTouchRadius: number = 20;\r\n  public showCenterMarker: boolean = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize: boolean = true;\r\n  public preserveSize: boolean = false;\r\n\r\n  public compressRatio: number = 1.0;\r\n\r\n  private _rounded: boolean = false;\r\n  private _keepAspect: boolean = true;\r\n\r\n  constructor(settings?: ICropperSettings) {\r\n    if (typeof settings === \"object\") {\r\n      Object.assign(this, settings);\r\n    }\r\n  }\r\n\r\n  set rounded(val: boolean) {\r\n    this._rounded = val;\r\n    if (val) {\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n  set keepAspect(val: boolean) {\r\n    this._keepAspect = val;\r\n    if (this._rounded === true && this._keepAspect === false) {\r\n      console.error(\r\n        \"Cannot set keep aspect to false on rounded cropper. Ellipsis not supported\"\r\n      );\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n"]}